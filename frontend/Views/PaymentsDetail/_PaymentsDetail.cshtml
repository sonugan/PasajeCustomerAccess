@model ICollection<CustomerAccess.Model.Policies.Payments>
<link href="~/Content/Views/beneficiaries-paymentdetails.css" rel="stylesheet">
<script src="~/Scripts/Views/payments-detail.js"></script>

<div class="panel panel-default">
    <div role="button" class="panel-heading panel-prud" data-toggle="collapse" data-parent="#accordion" href="#collapsePagos" aria-expanded="false" aria-controls="collapsePagos" id="headingOne">
        <span class="panel-title">
            <i id="iconPagos" class="indicator glyphicon glyphicon-chevron-down pull-right" data-toggle="collapse" data-parent="#accordion" href="#collapsePagos" aria-expanded="false" aria-controls="collapsePagos"></i>
            <a class="titulo-panel">Detalle de Pagos</a>
        </span>
    </div>
    <div id="collapsePagos" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
        <div class="panel-body">
            <div class="col-sm-12 col-md-3 pull-left margen-columna">
                <table class="table-condensed margen-tabla">
                    <tbody>
                        <tr>
                            <td>
                                <label class="margen-label-mostrar">Mostrar</label>
                            </td>
                            <td>
                                <div class="form-group margen-formgroup">
                                    <select class=" pointer" id="change-page-size3">
                                        <option value="10" selected="selected">10</option>
                                        <option value="25">25</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                    </select>
                                </div>
                            </td>
                            <td>
                                <label class="margen-label-registros">registros</label>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-sm-12 col-md-3 pull-right">
                <input id="filter3" class="form-control" placeholder="Buscar" type="text" />
            </div>
            <table id="tblDetallePagos" class="table table-striped footable dt-responsive toggle-circle" data-filter-text-only="true" data-filter="#filter3" data-page-navigation=".pagination" cellspacing="0">
                <thead>
                    <tr>
                        <th data-type="numeric" data-sort-initial="descending" class="text-center">Pago</th>
                        <th class="text-center">Importe recibido</th>
                        <th data-type="numeric" data-hide="phone" class="text-center">Acreditación</th>
                        <th data-hide="tablet,phone" class="text-center">Tipo de Cambio</th>
                        <th data-hide="phone" class="text-center">Importe Acreditado</th>
                        <th data-hide="tablet,phone" class="text-center">Medio</th>
                        <th data-toggle="true" data-sort-ignore="true"></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model == null || Model.Count == 0)
                        {
                            <tr>
                                <td colspan="7" class="text-center">No existe información a mostrar</td>
                            </tr>
                        }
                        else
                        {
                            foreach (var item in Model)
                            {
                                <tr class="text-center">
                                    <td data-value="@item.RDate.Value.ToString("yyyyMMdd")">@Html.DisplayFor(modelItem => item.RDate)</td>
                                    <td class="text-left margen-monedas">@item.RCurrency @Html.DisplayFor(modelItem => item.RAmount)</td>
                                    <td data-value="@item.ADate.Value.ToString("yyyyMMdd")">@Html.DisplayFor(modelItem => item.ADate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ExchangeRate)</td>
                                    <td class="text-left margen-monedas"> @item.ACurrency @Html.DisplayFor(modelItem => item.AAmount)</td>
                                    <td>@(item.PaymtMethod.First().ToString().ToUpper() + String.Join("",item.PaymtMethod.Skip(1)).ToLower())</td>
                                    <td></td>
                                </tr>
                            }
                        }
                    }
                </tbody>
                <tfoot>
                    <tr class="noExl">
                        <td colspan="9" class="text-center">
                            <ul class="pagination pagination-centered hide-if-no-paging"></ul>
                        </td>
                    </tr>
                </tfoot>
            </table>
            <table id="tblDetallePagosHidden" class="hidden">
                <thead>
                    <tr>
                        <th>Pago</th>
                        <th>Importe recibido</th>
                        <th>Acreditación</th>
                        <th>Tipo de Cambio</th>
                        <th>Importe Acreditado</th>
                        <th>Medio</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td data-value="@item.RDate.Value.ToString("yyyyMMdd")">@Html.DisplayFor(modelItem => item.RDate)</td>
                                    <td>$ @Html.DisplayFor(modelItem => item.RAmount)</td>
                                    <td data-value="@item.ADate.Value.ToString("yyyyMMdd")">@Html.DisplayFor(modelItem => item.ADate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ExchangeRate)</td>
                                    <td> @item.Currency @Html.DisplayFor(modelItem => item.AAmount)</td>
                                    <td>@(item.PaymtMethod.First().ToString().ToUpper() + String.Join("", item.PaymtMethod.Skip(1)).ToLower())</td>                                    <td></td>
                                </tr>
                            }
                        
                    }
                </tbody>
            </table>
            <br />
            <div class="row">
                <div class="boton-excel">
                    <button type="button" class="btn btn-primary" id="BtnExportPayDet">Excel</button>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3">
                    <label>Desde:</label>
                    <input type="text" id="dtFrom" class="form-control" placeholder="dd/mm/aaaa" maxlength="10">
                </div>
                <div class="col-sm-3">
                    <label>Hasta: </label>
                    <input type="text" id="dtTo" class="form-control" placeholder="dd/mm/aaaa" maxlength="10">
                </div>
                <div class="col-sm-2">
                    <button type="submit" id="btnExportPaymentDetail" class="btn btn-primary boton-pdf">Exportar a PDF</button>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <label>
                        <small>
                            <br />
                            Información disponible a partir de Septiembre de 2002.<br />
                            La fecha de pago puede diferir de la fecha de débito informada en el resumen de tarjeta de crédito o cuenta bancaria <br />
                            No se mostrarán los autopagos realizados desde los fondos de la póliza.
                        </small>
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    //$('table').footable({
    //    parsers: {
    //        alpha: window.footable.options.parsers.alpha, // default alpha & numeric parsers
    //        numeric: window.footable.options.parsers.numeric,
    //        custom: function (cell) {
    //            // Here you are passed the TD cell element and must return the parsed value for the cell.
    //            // You will need to use whatever method you like to retrieve the cell's actual value.
    //            // So for something like YYYY-MM-dd you could do:
    //            var str = $(cell).text(),
    //              parts = str.split('/'),
    //              YYYY = parseInt(parts[0]),
    //              MM = parseInt(parts[1]),
    //              dd = parseInt(parts[2]);
    //            // When making the new date remember months are indexed from 0 so minus 1.
    //            return new Date(YYYY, MM - 1, dd);
    //        }
    //    },
    //    sorters: {
    //        alpha: window.footable.options.sorters.alpha, // default alpha & numeric sorters
    //        numeric: window.footable.options.sorters.numeric,
    //        custom: function (a, b) {
    //            // here you are passed two values from the column and you must return a comparison of the two.
    //            if (a === b) return 1;
    //            if (a < b) return -1;
    //            return 1;
    //        }
    //    }
    //});

</script>